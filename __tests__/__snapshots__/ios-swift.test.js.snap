exports[`iOS/Swift creates a Template.m 1`] = `
"//  Created by react-native-create-bridge

// import RCTViewManager
#if __has_include(<React/RCTViewManager.h>)
#import <React/RCTViewManager.h>
#elif __has_include(“RCTViewManager.h”)
#import “RCTViewManager.h”
#else
#import “React/RCTViewManager.h” // Required when used as a Pod in a Swift project
#endif

// import RCTEventDispatcher
#if __has_include(<React/RCTEventDispatcher.h>)
#import <React/RCTEventDispatcher.h>
#elif __has_include(“RCTEventDispatcher.h”)
#import “RCTEventDispatcher.h”
#else
#import “React/RCTEventDispatcher.h” // Required when used as a Pod in a Swift project
#endif

// Export a native module
// https://facebook.github.io/react-native/docs/native-modules-ios.html#exporting-swift
@interface RCT_EXTERN_MODULE(TestModule, RCTViewManager)

// Map native properties to React Component props
// https://facebook.github.io/react-native/docs/native-components-ios.html#properties
RCT_EXPORT_VIEW_PROPERTY(\"exampleProp\", NSString)

// Export methods to a native module
// https://facebook.github.io/react-native/docs/native-modules-ios.html#exporting-swift
RCT_EXTERN_METHOD(exampleMethod)

@end
"
`;

exports[`iOS/Swift creates a TemplateManager.swift 1`] = `
"//  Created by react-native-create-bridge

import Foundation

@objc(TestModule)
class TestModuleManager : RCTViewManager {
  // Export constants to use in your native module
  override func constantsToExport() -> [String : Any]! {
    return [\"EXAMPLE_CONSTANT\": \"example\"]
  }

  // Return the native view that represents your React component
  override func view() -> UIView! {
    return UIView()
  }

  // Implement methods that you want to export to the native module
  @objc func exampleMethod() {
    // The bridge eventDispatcher is used to send events from native to JS env
    // No documentation yet on DeviceEventEmitter: https://github.com/facebook/react-native/issues/2819
    self.bridge.eventDispatcher().sendAppEvent(withName: \"EXAMPLE_EVENT\", body: nil)
  }
}
"
`;
